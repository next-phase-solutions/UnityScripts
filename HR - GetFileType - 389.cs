// Skeleton generated by Hyland Unity Editor on 3/22/2017 3:23:32 PM
namespace SYSGetFileType443
{
    using Hyland.Unity;

    /// <summary>
    /// Script 443 - check file format
    /// </summary>
    public class SYSGetFileType443 : IClientWorkflowScript
    {
        private const long PDF_FILE_TYPE = 16;
        #region IClientWorkflowScript
        /// <summary>
        /// Implementation of <see cref="IClientWorkflowScript.OnClientWorkflowScriptExecute" />.
        /// <seealso cref="IClientWorkflowScript" />
        /// </summary>
        /// <param name="app"></param>
        /// <param name="args"></param>
        public void OnClientWorkflowScriptExecute(Hyland.Unity.Application app, Hyland.Unity.ClientWorkflowEventArgs args)
        {
            app.Diagnostics.Level = Diagnostics.DiagnosticsLevel.Verbose;

            try
            {
                app.Diagnostics.WriteIf(Diagnostics.DiagnosticsLevel.Info, "Begin Script - Get File Type");

                Document objCurrentDocument = args.Document;
                app.Diagnostics.WriteIf(Diagnostics.DiagnosticsLevel.Info, string.Format("Processing document: {0}", objCurrentDocument.ID.ToString()));

                //Get Current Rendition
                Rendition objDocRendition = objCurrentDocument.DefaultRenditionOfLatestRevision;

                if (objDocRendition.FileType.ID == PDF_FILE_TYPE)
                {
                    args.ScriptResult = true;
                    app.Diagnostics.WriteIf(Diagnostics.DiagnosticsLevel.Info, "PDF File Format");
                }
                else
                {
                    args.ScriptResult = false;
                    app.Diagnostics.WriteIf(Diagnostics.DiagnosticsLevel.Info, "Not PDF File Format");
                }

            }
            catch (UnityAPIException ex)
            {
                app.Diagnostics.WriteIf(Diagnostics.DiagnosticsLevel.Error, string.Format("Unity API Exception: {0}", ex.Message));
                app.Diagnostics.WriteIf(Diagnostics.DiagnosticsLevel.Error, string.Format("Stack Trace: {0}", ex.StackTrace));
                args.ScriptResult = false;
            }
            finally
            {
                app.Diagnostics.WriteIf(Diagnostics.DiagnosticsLevel.Info, "End Script - Get File Type");
            }
        }
        #endregion
    }
}